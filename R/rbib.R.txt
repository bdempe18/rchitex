#' bib tree converts a S3 rbib object to 
#'   a graph.
#' @param  rbib class object. Attained through read_bib.
#' @returns Invisible null return. Outputs a graph
bibTree <- function(rbib) { 
   require(ggnetwork)

   return NULL 
}

read_bib <- funcion(dir, recursive = TRUE) { 
   require(tidyverse)
   require(pdftools)
   # alternative
   # require(tm)

   stopifnot(is.character(dir) & dir.exist(dir))
   files <- list.files(path = dir, pattern = "*.pdf, 
                       full.names = TRUEm recursive = recursive)

   bib <- purrr::map(files, pdf_text)
   # not sure if I need a corpus or VCorpus
   # bib <- corpus(URISource(files), readerControl = list(read = readPDF))

   # assuming the corpus approach, corups needs to be iterated through
   # anything before the reference section needs to be deleted
   # cannot assume that page in a single column...

   bib <- tm_map(bib, extract_bib)

   structure(bib, list(corpus = bib),
             class = 'rbib')  
}

# needs to search through document and remove anything before bib
extract_bib <- function(article) { return article }